/////////////////////////////////////////////////////////////////////////////////////////////
// 기본 제공코드는 임의 수정해도 관계 없습니다. 단, 입출력 포맷 주의
// 아래 표준 입출력 예제 필요시 참고하세요.
// 표준 입력 예제
// int a;
// float b, c;
// double d, e, f;
// char g;
// char var[256];
// long long AB;
// cin >> a;                            // int 변수 1개 입력받는 예제
// cin >> b >> c;                       // float 변수 2개 입력받는 예제 
// cin >> d >> e >> f;                  // double 변수 3개 입력받는 예제
// cin >> g;                            // char 변수 1개 입력받는 예제
// cin >> var;                          // 문자열 1개 입력받는 예제
// cin >> AB;                           // long long 변수 1개 입력받는 예제
/////////////////////////////////////////////////////////////////////////////////////////////
// 표준 출력 예제
// int a = 0;                            
// float b = 1.0, c = 2.0;               
// double d = 3.0, e = 0.0; f = 1.0;
// char g = 'b';
// char var[256] = "ABCDEFG";
// long long AB = 12345678901234567L;
// cout << a;                           // int 변수 1개 출력하는 예제
// cout << b << " " << c;               // float 변수 2개 출력하는 예제
// cout << d << " " << e << " " << f;   // double 변수 3개 출력하는 예제
// cout << g;                           // char 변수 1개 출력하는 예제
// cout << var;                         // 문자열 1개 출력하는 예제
// cout << AB;                          // long long 변수 1개 출력하는 예제
/////////////////////////////////////////////////////////////////////////////////////////////

#include<iostream>

using namespace std;

int levels[10000];
int navi[301][301];
int numr[10000];
int numc[10000];
int dc[6] = { 1,2,1,-1,-2,-1 };
int dr[6] = { -1,0,1,1,0,-1 };
int front;
int rear;
int visitied[10000];

int CheckLevel(int num)
{
	for (int i = 1; i < 10000; i++) {
		if (levels[i] > num) return i-1;
	}

	return 0xffff;
}

struct pos {
	int r, c;
	int val;
};

struct pos q[1000];


void push(int r, int c, int val)
{
	q[rear].r = r;
	q[rear].c = c;
	q[rear++].val = val;
}

bool empty()
{
	return front == rear ? true : false;
}

struct pos pop()
{
	return q[rear--];
}

int main(int argc, char** argv)
{
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);

	int test_case;
	int T;
	/*
	   아래의 freopen 함수는 input.txt 를 read only 형식으로 연 후,
	   앞으로 표준 입력(키보드) 대신 input.txt 파일로부터 읽어오겠다는 의미의 코드입니다.
	   //여러분이 작성한 코드를 테스트 할 때, 편의를 위해서 input.txt에 입력을 저장한 후,
	   freopen 함수를 이용하면 이후 cin 을 수행할 때 표준 입력 대신 파일로부터 입력을 받아올 수 있습니다.
	   따라서 테스트를 수행할 때에는 아래 주석을 지우고 이 함수를 사용하셔도 좋습니다.
	   freopen 함수를 사용하기 위해서는 #include <cstdio>, 혹은 #include <stdio.h> 가 필요합니다.
	   단, 채점을 위해 코드를 제출하실 때에는 반드시 freopen 함수를 지우거나 주석 처리 하셔야 합니다.
	*/
	freopen("4112_input.txt", "r", stdin);
	cin >> T;
	/*
	   여러 개의 테스트 케이스가 주어지므로, 각각을 처리합니다.
	*/	

#if 0
	for (int i = 1; i < 10000; i++) {
		if (levels[i - 1] >= 10000) break;
		levels[i] = levels[i - 1] + i;
	}
#endif

	int num = 1;
	while (num <= 10000) {
		for (int i = 1; i <= 300; i++) {
			for (int j = 150 - i; j < 150 + i; j += 2) {
				numr[num] = i;
				numc[num] = j;
				navi[i][j] = num++;
			}
		}
	}
	
	for (test_case = 1; test_case <= T; ++test_case)
	{
		int start, end;
		cin >> start >> end;
		push(numr[start], numc[start], 0);

		while (!empty()) {
			struct pos tmp = pop();
			
			if (navi[tmp.r][tmp.c] == end)
			{
				cout << "#" << test_case << " " << tmp.val << endl;
				break;
			}
			for (int i = 0; i < 6; i++) {
				int nr = tmp.r + dr[i];
				int nc = tmp.c + dc[i];
				int nval = tmp.val + 1;

				if (nr <= 0 || nc <= 0 || nr > 300 || nc > 300 || navi[nr][nc] == 0 || visitied[navi[nr][nc]] > 0) continue;
				push(nr, nc, nval);
				visitied[navi[nr][nc]]++;
			}
		}
	}
	return 0;//정상종료시 반드시 0을 리턴해야합니다.
}